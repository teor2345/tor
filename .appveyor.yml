version: 1.0.{build}

clone_depth: 50

environment:
  APPVEYOR_SSH_KEY: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCiT1XA7t8H5hZefijZSZyvBKqll1UdHuuwkcngW/jst4gnLFSj9eymL9Y7G5uY4l4Z/0okUl111OQlER7vnf2sMt6ecQcQS87JXDC662MhPcAo5e5kTDCgsp8AneHcWrcJ2I7qrth/WFb6T4xsB86+nwcmXldReAGINwdUHC86h7sJHIB0UAi3t0Gwpk79L26TWIFQNdZVROt5K54ggORseJjlUCjKgWzVEwq0NnBojwsmShokTIOgdww1I7xHVtmGoIU3BcsWfiokeyW0NshkiSAMdhxpcxBIUwW4NdFwZMo579b9lQ/DEZLEph3ZYpMZSwH6Cx4j/j/j90ZHjMSd0rtnCpHGtS5+sjAYZwlwWR+RiuHOumldNcnDLk+4Os5JI3xRErB5TtdM0wlDfZQX2j+/AjATehgX/wQcAwomc9Wz7x+BGZkfgEM03HsDrip5oyyNWunXIzx4I2PdLVJ8qO0d+7gbKu0l9B0EB3zzT9Ol7jcCXUUiLb3nPyVg/oK7+HGBncc5Ud8APB9cas2fqR5/UKU5vkXrEjOftPsIMQDOmSa0f/Dter6LzIY6kNBFgJDCpGOhh/NdfUbKuFgnWCyBP2o9Vm412cWYKbnHvGdM66v865N0d4Ja1GwRUFZYv620WOJKCr4yubd0wcAKlFr1jO6yQYwiSClDcfGyiQ=="

  compiler: mingw

  matrix:
  - target: x86_64-w64-mingw32
    compiler_path: mingw64
    openssl_path: /c/OpenSSL-Win64

install:
- ps: >-
    Function Execute-Command ($commandPath)
    {
        & $commandPath $args 2>&1
        if ( $LastExitCode -ne 0 ) {
            $host.SetShouldExit( $LastExitCode )
        }
    }
    Function Execute-Bash ()
    {
        Execute-Command 'c:\msys64\usr\bin\bash' '-e' '-c' $args
    }
    Execute-Command "C:\msys64\usr\bin\pacman" -Sy --noconfirm openssl-devel openssl libevent-devel libevent mingw-w64-i686-libevent mingw-w64-x86_64-libevent mingw-w64-i686-openssl mingw-w64-x86_64-openssl mingw-w64-i686-zstd mingw-w64-x86_64-zstd

build_script:
- sh: export APPVEYOR_SSH_BLOCK=true
- sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
- ps: >-
    if ($env:compiler -eq "mingw") {
            $oldpath = ${env:Path} -split ';'
            $buildpath = @("C:\msys64\${env:compiler_path}\bin", "C:\msys64\usr\bin") + $oldpath
            $env:Path = @($buildpath) -join ';'
            $env:build = @("${env:APPVEYOR_BUILD_FOLDER}", $env:target) -join '\'
            Set-Location "${env:APPVEYOR_BUILD_FOLDER}"
            Execute-Bash 'autoreconf -i'
            mkdir "${env:build}"
            Set-Location "${env:build}"
            Execute-Bash "which ${env:target}-gcc"
            Execute-Bash "${env:target}-gcc --version"
            Execute-Bash "../configure --prefix=/${env:compiler_path} --build=${env:target} --host=${env:target} --disable-asciidoc --enable-fatal-warnings --with-openssl-dir=${env:openssl_path}"
            Execute-Bash "V=1 make -j2"
            Execute-Bash "V=1 make -j2 install"
     }

test_script:
- ps: >-
    if ($env:compiler -eq "mingw") {
            $oldpath = ${env:Path} -split ';'
            $buildpath = @("C:\msys64\${env:compiler_path}\bin") + $oldpath
            $env:Path = $buildpath -join ';'
            Set-Location "${env:build}"
            Execute-Bash "VERBOSE=1 make -j2 check"
    }

on_failure:
- ps: >-
    if ($env:compiler -eq "mingw") {
            $oldpath = ${env:Path} -split ';'
            $buildpath = @("C:\msys64\usr\bin") + $oldpath
            $env:Path = @($buildpath) -join ';'
            Set-Location "${env:build}"
            Execute-Bash "7z a logs.zip config.log || true"
            Execute-Bash "7z a logs.zip test-suite.log || true"
            Execute-Bash "appveyor PushArtifact logs.zip || true"
            Execute-Bash "tail -1000 config.log || true"
            Execute-Bash "cat test-suite.log || true"
    }
- cmd: C:\Python27\python.exe %APPVEYOR_BUILD_FOLDER%\scripts\test\appveyor-irc-notify.py irc.oftc.net:6697 tor-ci failure
